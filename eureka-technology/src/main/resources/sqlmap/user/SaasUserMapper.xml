<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.dao.user.mapper.SaasUserMapper" >
  <resultMap id="BaseResultMap" type="com.cloud.dao.user.entity.SaasUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="domain_id" property="domainId" jdbcType="INTEGER" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="user_token" property="userToken" jdbcType="VARCHAR" />
    <result column="user_ip" property="userIp" jdbcType="VARCHAR" />
    <result column="user_img" property="userImg" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="login_time" property="loginTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cloud.dao.user.entity.SaasUser" extends="BaseResultMap" >
    <result column="attach" property="attach" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, domain_id, user_phone, user_name, user_pwd, user_token, user_ip, user_img, state, 
    type, is_delete, create_time, update_time, login_time
  </sql>
  <sql id="Blob_Column_List" >
    attach
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.cloud.dao.user.entity.SaasUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from saas_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cloud.dao.user.entity.SaasUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from saas_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from saas_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from saas_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloud.dao.user.entity.SaasUserExample" >
    delete from saas_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cloud.dao.user.entity.SaasUser" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into saas_user (domain_id, user_phone, user_name, 
      user_pwd, user_token, user_ip, 
      user_img, state, type, 
      is_delete, create_time, update_time, 
      login_time, attach)
    values (#{domainId,jdbcType=INTEGER}, #{userPhone,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userPwd,jdbcType=VARCHAR}, #{userToken,jdbcType=VARCHAR}, #{userIp,jdbcType=VARCHAR}, 
      #{userImg,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, #{type,jdbcType=TINYINT}, 
      #{isDelete,jdbcType=TINYINT}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{loginTime,jdbcType=INTEGER}, #{attach,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cloud.dao.user.entity.SaasUser" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into saas_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="domainId != null" >
        domain_id,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="userToken != null" >
        user_token,
      </if>
      <if test="userIp != null" >
        user_ip,
      </if>
      <if test="userImg != null" >
        user_img,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="attach != null" >
        attach,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="domainId != null" >
        #{domainId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null" >
        #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null" >
        #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="attach != null" >
        #{attach,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloud.dao.user.entity.SaasUserExample" resultType="java.lang.Integer" >
    select count(*) from saas_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update saas_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.domainId != null" >
        domain_id = #{record.domainId,jdbcType=INTEGER},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPwd != null" >
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.userToken != null" >
        user_token = #{record.userToken,jdbcType=VARCHAR},
      </if>
      <if test="record.userIp != null" >
        user_ip = #{record.userIp,jdbcType=VARCHAR},
      </if>
      <if test="record.userImg != null" >
        user_img = #{record.userImg,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=INTEGER},
      </if>
      <if test="record.attach != null" >
        attach = #{record.attach,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update saas_user
    set id = #{record.id,jdbcType=INTEGER},
      domain_id = #{record.domainId,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      user_token = #{record.userToken,jdbcType=VARCHAR},
      user_ip = #{record.userIp,jdbcType=VARCHAR},
      user_img = #{record.userImg,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=CHAR},
      type = #{record.type,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=INTEGER},
      attach = #{record.attach,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update saas_user
    set id = #{record.id,jdbcType=INTEGER},
      domain_id = #{record.domainId,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      user_token = #{record.userToken,jdbcType=VARCHAR},
      user_ip = #{record.userIp,jdbcType=VARCHAR},
      user_img = #{record.userImg,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=CHAR},
      type = #{record.type,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloud.dao.user.entity.SaasUser" >
    update saas_user
    <set >
      <if test="domainId != null" >
        domain_id = #{domainId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null" >
        user_token = #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        user_ip = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null" >
        user_img = #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="attach != null" >
        attach = #{attach,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cloud.dao.user.entity.SaasUser" >
    update saas_user
    set domain_id = #{domainId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_token = #{userToken,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=VARCHAR},
      user_img = #{userImg,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      type = #{type,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=INTEGER},
      attach = #{attach,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloud.dao.user.entity.SaasUser" >
    update saas_user
    set domain_id = #{domainId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_token = #{userToken,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=VARCHAR},
      user_img = #{userImg,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      type = #{type,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>